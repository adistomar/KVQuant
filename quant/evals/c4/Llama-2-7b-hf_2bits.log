The model was loaded with use_flash_attention_2=True, which is deprecated and may be removed in a future release. Please use `attn_implementation="flash_attention_2"` instead.
Loading model ...
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:04<00:04,  4.07s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:05<00:00,  2.45s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:05<00:00,  2.69s/it]
Done.
Downloading data:   0%|          | 0.00/40.5M [00:00<?, ?B/s]Downloading data:  26%|██▌       | 10.5M/40.5M [00:00<00:00, 38.6MB/s]Downloading data:  52%|█████▏    | 21.0M/40.5M [00:00<00:00, 58.3MB/s]Downloading data:  78%|███████▊  | 31.5M/40.5M [00:00<00:00, 70.4MB/s]Downloading data: 100%|██████████| 40.5M/40.5M [00:00<00:00, 74.2MB/s]Downloading data: 100%|██████████| 40.5M/40.5M [00:00<00:00, 57.7MB/s]
Generating validation split: 0 examples [00:00, ? examples/s]Generating validation split: 4640 examples [00:00, 18410.76 examples/s]Generating validation split: 22910 examples [00:00, 68488.84 examples/s]Generating validation split: 41615 examples [00:00, 102612.47 examples/s]Generating validation split: 45576 examples [00:00, 65186.85 examples/s] 
/rscratch/adityatomar/anaconda3/envs/myenv/lib/python3.11/site-packages/transformers/modeling_utils.py:4779: FutureWarning: `_is_quantized_training_enabled` is going to be deprecated in transformers 4.39.0. Please use `model.hf_quantizer.is_trainable` instead
  warnings.warn(
/rscratch/adityatomar/KVQuant/quant/kvquant/simquant_module_quantizer.py:612: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.outlier_threshold_upper = torch.tensor(quantizer[0]).cuda().flatten().half()
/rscratch/adityatomar/KVQuant/quant/kvquant/simquant_module_quantizer.py:613: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.outlier_threshold_lower = torch.tensor(quantizer[1]).cuda().flatten().half()
Evaluating ...
Batch 0 of 32
Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Batch 1 of 32
Batch 2 of 32
Batch 3 of 32
Batch 4 of 32
Batch 5 of 32
Batch 6 of 32
Batch 7 of 32
Batch 8 of 32
Batch 9 of 32
Batch 10 of 32
Batch 11 of 32
Batch 12 of 32
Batch 13 of 32
Batch 14 of 32
Batch 15 of 32
Batch 16 of 32
Batch 17 of 32
Batch 18 of 32
Batch 19 of 32
Batch 20 of 32
Batch 21 of 32
Batch 22 of 32
Batch 23 of 32
Batch 24 of 32
Batch 25 of 32
Batch 26 of 32
Batch 27 of 32
Batch 28 of 32
Batch 29 of 32
Batch 30 of 32
Batch 31 of 32
7.828982353210449
